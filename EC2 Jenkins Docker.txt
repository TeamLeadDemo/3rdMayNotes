1) EC2 creation - switch to root user
	sudo su
2) Install maven in EC2 which will install JDK also
	sudo yum -y install maven
	mvn -version
	java -version
3) Steps to install Git in EC2
	sudo yum -y install git
	git --version
	git config --global user.name "DeveloperOneDemo"
	git config --global user.email "Developer@gmail.com"
4) Steps to install Jenkins in EC2
	- Add the Jenkins repo using the following command:
		sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
	- Import a key file from Jenkins-CI to enable installation from the package:
		sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
	- Install Java:
		java is already installed else	
		sudo amazon-linux-extras install java-openjdk11 -y
	- Install epel to daemonize jenkins installation
		amazon-linux-extras install epel -y
	- Install Jenkins:
		sudo yum install jenkins -y
	- Start Jenkins as a service:
		sudo systemctl start jenkins
	- Enable the Jenkins service to start at boot:
		sudo systemctl enable jenkins
	- You can check the status of the Jenkins service using the command:
		sudo systemctl status jenkins

5) Steps to install Docker in EC2
	- The -y option is needed because the commands often prompt you to answer yes or no. This takes care of that by responding yes.
		sudo yum update -y
	- Secondly, you have to install Docker as a package. The following command is recommended by Amazon, but you could still do it using yum as well:
		sudo amazon-linux-extras install docker -y
	- Now we have Docker as a service. The third step is to start the Docker service:
		sudo service docker start
	- Now, we arrive at the fourth step. To be able to use Docker commands without using sudo, you have to add ec2-user to the docker group:
		sudo usermod -a -G docker ec2-user
	- Verify the installation by running any Docker command (e.g. docker info should work just fine).
	  And thatâ€™s it. Docker is now installed and ready to be used.
		docker --version
	- But there is one more subtle detail. Every time your Amazon AMI is rebooted, you want the Docker service to remain up and running.
		sudo systemctl enable docker
	Finally, you can also list these commands in the user data when starting up a Docker AMI so you don't have to run them after launching a new machine.

6) Steps to install docker-compose in EC2
	- Copy the appropriate docker-compose binary from GitHub:
		sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose

	- NOTE: to get the latest version (thanks @spodnet): // i used this
		sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose

	- Fix permissions after download:
		sudo chmod +x /usr/local/bin/docker-compose

	- Verify success:
		docker-compose version

	- reboot the EC2 instance

7) command to change file permissions of docker.sock for jenkins pipeline script to run docker-compose command
	sudo chmod 666 /var/run/docker.sock

8) command to choose which java in ec2
	alternatives --config java